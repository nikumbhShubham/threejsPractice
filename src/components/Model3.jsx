/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: rollthebryce (https://sketchfab.com/rollthebryce)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/construction-barricades-32fd7c8c35854920b9557d1aa71af3fe
Title: Construction Barricades
*/

import React, { useRef,useState } from 'react'
import { Float, useGLTF } from '@react-three/drei'
import gsap from 'gsap'
import { useGSAP } from '@gsap/react'

const Model3 = (props) =>  {
  const { nodes, materials } = useGLTF('/models/construction_barricades.glb')
  const cubeRef = useRef();
  const [hovered, setHovered] = useState(false);
  useGSAP(() => {
    gsap
      .timeline({
        repeat: -1,
        repeatDelay: 0.5,
      })
      .to(cubeRef.current.rotation, {
        y: hovered ? '+=2' : `+=${Math.PI * 2}`,
        x: hovered ? '+=2' : `-=${Math.PI * 2}`,
        duration: 2.5,
        stagger: {
          each: 0.15,
        },
      });
  });


  return (
    <Float {...props} floatIntensity={2} >
      <group rotation={[-Math.PI / 2, 0, 0]} ref={cubeRef}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            
            geometry={nodes.defaultMaterial.geometry}
            material={materials.ConstructionSignDecal}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_1.geometry}
            material={materials.ConstructionSignMetal}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_2.geometry}
            material={materials.ConstructionSignBase}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_3.geometry}
            material={materials.ConstructionSignLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_4.geometry}
            material={materials.ReflectorBlack}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_5.geometry}
            material={materials.ReflectorOrange}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_6.geometry}
            material={materials.ReflectorShell}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_7.geometry}
            material={materials.RoadClosedSign}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_8.geometry}
            material={materials.SignLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_9.geometry}
            material={materials.MetalStuds}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_10.geometry}
            material={materials.SignStripedBoards}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_11.geometry}
            material={materials.ConeBaseOrange}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_12.geometry}
            material={materials.ConeWhiteStripes}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_13.geometry}
            material={materials.ConeBodyOrange}
          />
        </group>
      </group>
    </Float>
  )
}

useGLTF.preload('/models/construction_barricades.glb')
export default Model3;